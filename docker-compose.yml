version: '3.7'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERS}
    container_name: elasticsearch
    environment:
      - node.name=SolarHome
      - discovery.type=single-node
      - bootstrap.memory_lock=true          # dev
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"    # dev
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - datasolar01:/usr/share/elasticsearch/data
    cap_add:
      - IPC_LOCK
    ports:
      - ${PORT_ELASTIC_1}:${PORT_ELASTIC_1}
    restart: always
    networks:
      backend:

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:${KIBANA_VERS}
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:${PORT_ELASTIC_1}
    ports:
      - ${PORT_KIBANA}:${PORT_KIBANA}
    links:
      - elasticsearch
    restart: always
    networks:
      backend:

  grafana:
    container_name: grafana
    image: grafana
    build:
      context: .
      dockerfile: ./docker/Dockerfile.grafana
    ports:
      - ${PORT_GRAFANA}:${PORT_GRAFANA}
    environment:
      - PORT_ELASTIC_1=${PORT_ELASTIC_1}
    restart: always
    networks:
      backend:

  pyserver:
    container_name: pyserver
    image: pyserver
    build:
      context: .
      dockerfile: ./docker/Dockerfile.pyserver  
    environment:
      - PORT_ELASTIC_1=${PORT_ELASTIC_1}
    ports:
      - ${PORT_DEV_REMOTE_DEBUG}:${PORT_DEV_REMOTE_DEBUG}
    entrypoint: [ "python3", "-m", "debugpy", "--listen",
     "0.0.0.0:${PORT_DEV_REMOTE_DEBUG}", "./main.py"]
    stdin_open: true
    tty: true
    restart: always
    networks:
      backend:

  logstash:
    container_name: logstash
    image: logstash
    build:
      context: .
      dockerfile: ./docker/Dockerfile.logstash
    environment:
      - PORT_ELASTIC_1=${PORT_ELASTIC_1}
    ports:
      - ${PORT_LOGSTASH}:${PORT_LOGSTASH}
    networks:
      backend:

volumes:
  datasolar01:
    driver: local
    driver_opts:
      o: bind
      type: volume
      device: /mnt/usb1/storagehome/

networks:
  backend:
