apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: elasticsearch
      name: elasticsearch
    spec:
      ports:
        - name: "9200"
          port: 9200
          targetPort: 9200
        - name: "9300"
          port: 9300
          targetPort: 9300
      selector:
        io.kompose.service: elasticsearch
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
      name: grafana
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 3000
      selector:
        io.kompose.service: grafana
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: kibana
      name: kibana
    spec:
      ports:
        - name: "5601"
          port: 5601
          targetPort: 5601
      selector:
        io.kompose.service: kibana
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: logstash
      name: logstash
    spec:
      ports:
        - name: "5044"
          port: 5044
          targetPort: 5044
      selector:
        io.kompose.service: logstash
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: pyserver
      name: pyserver
    spec:
      ports:
        - name: "5678"
          port: 5678
          targetPort: 5678
      selector:
        io.kompose.service: pyserver
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: elasticsearch
      name: elasticsearch
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: elasticsearch
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.service: elasticsearch
        spec:
          containers:
            - env:
                - name: ES_JAVA_OPTS
                  value: -Xms512m -Xmx512m
                - name: bootstrap.memory_lock
                  value: "true"
                - name: discovery.type
                  value: single-node
                - name: node.name
                  value: SolarHome
              image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0-arm64
              name: elasticsearch
              ports:
                - containerPort: 9200
                - containerPort: 9300
              resources: {}
              securityContext:
                capabilities:
                  add:
                    - IPC_LOCK
              volumeMounts:
                - mountPath: /usr/share/elasticsearch/data
                  name: dataSolar01
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /home/ubuntu/solarMinikube
              name: dataSolar01
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: backend
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/backend: "true"
      podSelector:
        matchLabels:
          io.kompose.network/backend: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
      name: grafana
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: grafana
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.network/frontend: "true"
            io.kompose.service: grafana
        spec:
          containers:
            - env:
                - name: COMPOSE_PROJECT_NAME
                  value: SOLAR_TEST
                - name: ELASTIC_VERS
                  value: 7.12.0
                - name: ELASTIC_VERS_ARM
                  value: 7.12.0-arm64
                - name: GRAFANA_VERS
                  value: 7.4.0
                - name: IPV4_DEVCONTAINER
                  value: 172.20.0.99
                - name: IPV4_ELASTICSEARCH
                  value: 172.20.0.3
                - name: IPV4_GRAFANA
                  value: 172.20.0.5
                - name: IPV4_HELLO_WORLD
                  value: 172.20.0.2
                - name: IPV4_KIBANA
                  value: 172.20.0.4
                - name: IPV4_LOGSTASH
                  value: 172.20.0.7
                - name: IPV4_PROD_GRAFANA
                  value: 192.168.178.11
                - name: IPV4_PROD_KIBANA
                  value: 192.168.178.13
                - name: IPV4_PROD_PYTHON_SERVER
                  value: 192.168.178.12
                - name: IPV4_PROD_SUBNET
                  value: 192.168.178.0/24
                - name: IPV4_PYTHON_SERVER
                  value: 172.20.0.6
                - name: IPV4_SUBNET
                  value: 172.20.0.0/24
                - name: KIBANA_VERS
                  value: 7.12.0
                - name: LOGSTASH_VERS
                  value: 7.11.2
                - name: PORT_DEV_REMOTE_DEBUG
                  value: "5678"
                - name: PORT_ELASTIC_1
                  value: "9200"
                - name: PORT_ELASTIC_2
                  value: "9300"
                - name: PORT_GRAFANA
                  value: "3000"
                - name: PORT_KIBANA
                  value: "5601"
                - name: PORT_LOGSTASH
                  value: "5044"
                - name: UBUNTU_VERS
                  value: "20.04"
              image: grafana
              name: grafana
              ports:
                - containerPort: 3000
              resources: {}
              volumeMounts:
                - mountPath: /etc/dashboards
                  name: grafana-hostpath0
                - mountPath: /etc/grafana/provisioning/dashboards
                  name: grafana-hostpath1
                - mountPath: /etc/grafana/provisioning/datasources
                  name: grafana-hostpath2
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /home/ubuntu/solarMinikube/docker/dashboards/json
              name: grafana-hostpath0
            - hostPath:
                path: /home/ubuntu/solarMinikube/docker/dashboards
              name: grafana-hostpath1
            - hostPath:
                path: /home/ubuntu/solarMinikube/docker/datasources
              name: grafana-hostpath2
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: frontend
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/frontend: "true"
      podSelector:
        matchLabels:
          io.kompose.network/frontend: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: kibana
      name: kibana
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: kibana
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.network/frontend: "true"
            io.kompose.service: kibana
        spec:
          containers:
            - env:
                - name: ELASTICSEARCH_HOSTS
                  value: http://elasticsearch:9200
              image: jamesgarside/kibana:7.12.0
              name: kibana
              ports:
                - containerPort: 5601
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: logstash
      name: logstash
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: logstash
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.service: logstash
        spec:
          containers:
            - env:
                - name: COMPOSE_PROJECT_NAME
                  value: SOLAR_TEST
                - name: ELASTIC_VERS
                  value: 7.12.0
                - name: ELASTIC_VERS_ARM
                  value: 7.12.0-arm64
                - name: GRAFANA_VERS
                  value: 7.4.0
                - name: IPV4_DEVCONTAINER
                  value: 172.20.0.99
                - name: IPV4_ELASTICSEARCH
                  value: 172.20.0.3
                - name: IPV4_GRAFANA
                  value: 172.20.0.5
                - name: IPV4_HELLO_WORLD
                  value: 172.20.0.2
                - name: IPV4_KIBANA
                  value: 172.20.0.4
                - name: IPV4_LOGSTASH
                  value: 172.20.0.7
                - name: IPV4_PROD_GRAFANA
                  value: 192.168.178.11
                - name: IPV4_PROD_KIBANA
                  value: 192.168.178.13
                - name: IPV4_PROD_PYTHON_SERVER
                  value: 192.168.178.12
                - name: IPV4_PROD_SUBNET
                  value: 192.168.178.0/24
                - name: IPV4_PYTHON_SERVER
                  value: 172.20.0.6
                - name: IPV4_SUBNET
                  value: 172.20.0.0/24
                - name: KIBANA_VERS
                  value: 7.12.0
                - name: LOGSTASH_VERS
                  value: 7.11.2
                - name: PORT_DEV_REMOTE_DEBUG
                  value: "5678"
                - name: PORT_ELASTIC_1
                  value: "9200"
                - name: PORT_ELASTIC_2
                  value: "9300"
                - name: PORT_GRAFANA
                  value: "3000"
                - name: PORT_KIBANA
                  value: "5601"
                - name: PORT_LOGSTASH
                  value: "5044"
                - name: UBUNTU_VERS
                  value: "20.04"
              image: logstash
              name: logstash
              ports:
                - containerPort: 5044
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/docker
                  name: logstash-hostpath0
                  readOnly: true
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /mnt/usb1/docker
              name: logstash-hostpath0
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: pyserver
      name: pyserver
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: pyserver
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-resolved.yaml --volumes hostPath --out minikube.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.network/frontend: "true"
            io.kompose.service: pyserver
        spec:
          containers:
            - command:
                - python3
                - -m
                - debugpy
                - --listen
                - 192.168.178.12:5678
                - ./main.py
              env:
                - name: COMPOSE_PROJECT_NAME
                  value: SOLAR_TEST
                - name: ELASTIC_VERS
                  value: 7.12.0
                - name: ELASTIC_VERS_ARM
                  value: 7.12.0-arm64
                - name: GRAFANA_VERS
                  value: 7.4.0
                - name: IPV4_ADDR
                  value: 192.168.178.12
                - name: IPV4_DEVCONTAINER
                  value: 172.20.0.99
                - name: IPV4_ELASTICSEARCH
                  value: 172.20.0.3
                - name: IPV4_GRAFANA
                  value: 172.20.0.5
                - name: IPV4_HELLO_WORLD
                  value: 172.20.0.2
                - name: IPV4_KIBANA
                  value: 172.20.0.4
                - name: IPV4_LOGSTASH
                  value: 172.20.0.7
                - name: IPV4_PROD_GRAFANA
                  value: 192.168.178.11
                - name: IPV4_PROD_KIBANA
                  value: 192.168.178.13
                - name: IPV4_PROD_PYTHON_SERVER
                  value: 192.168.178.12
                - name: IPV4_PROD_SUBNET
                  value: 192.168.178.0/24
                - name: IPV4_PYTHON_SERVER
                  value: 172.20.0.6
                - name: IPV4_SUBNET
                  value: 172.20.0.0/24
                - name: KIBANA_VERS
                  value: 7.12.0
                - name: LOGSTASH_VERS
                  value: 7.11.2
                - name: PORT_DEV_REMOTE_DEBUG
                  value: "5678"
                - name: PORT_ELASTIC_1
                  value: "9200"
                - name: PORT_ELASTIC_2
                  value: "9300"
                - name: PORT_GRAFANA
                  value: "3000"
                - name: PORT_KIBANA
                  value: "5601"
                - name: PORT_LOGSTASH
                  value: "5044"
                - name: UBUNTU_VERS
                  value: "20.04"
              image: pyserver
              name: pyserver
              ports:
                - containerPort: 5678
              resources: {}
              stdin: true
              tty: true
              volumeMounts:
                - mountPath: /usr/src/pyserver
                  name: pyserver-hostpath0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /home/ubuntu/solarMinikube/src/pyserver
              name: pyserver-hostpath0
    status: {}
kind: List
metadata: {}

